召回算法综述
基于邻域：
CF:itemcf是item根据user的共现，得到item的相似度矩阵，user根据点击过的item的相似Item，来完成推荐。
     usercf是user根据item的共现，得到user的相似度矩阵，user将相似user点击过的item完成自己的推荐。

LFM：根据user和item的矩阵，将矩阵分解，得到user和item的隐向量，将两个向量点乘的数值取topk，完成推荐。

PR：根据user和item的二分图，在这个二分图之间随机游走，得到item对固定user的倾向度(pr值)，取pr值的topk,完成推荐。

基于内容：
CB：先将item进行刻画，继而将user进行刻画，然后将item的刻画和user的刻画在线上推荐的时候串联起来。

基于神经网络：
item2vec:根据user的行为得到由item组成的句子，根据这个训练语量得item embedding的向量，得到这个向量之后就能得到item的相似度矩阵，
                从而根据user的历史点击推荐相似的item给用户，完成推荐。

工业界，推荐系统中，多种召回并存的架构。
每一种召回算法都会召回一些item，每一种召回算法的召回item的数目如何确定？
1.为了满足rank阶段的性能要求，指定召回阶段召回的数目(比如500个)，各种算法根据以往表现来分这500个，每种算法指定一个比例(比如CF是0.5，LFM是0.2，item2vec是0.3)，
每个召回算法就有了召回算法的上限；
2.rank阶段没有性能压力，每个算法在k,v中的item，全部召回；
在召回完成后，需要一个合并，将重复召回的进行去重，召回完成后的item进入排序阶段。

召回算法如何评价：
1.离线评价准入，
评价新增算法的推荐结果在测试集上的表现，
如新增算法给出了推荐结果，根据测试集上对user的展示数据和user的点击数据，
ctr = 点击数据/推荐结果，如果这个ctr高于极限的ctr，便可以将这个推荐结果放到线上进行AB测试，
线下评价结果与线上真实环境评价结果有差异，但这种方式能够给一个基础直观的评判，是否可以准入到线上。
如：以过去一周的user真实的展现与点击数据为依据，来训练，只使用周一到周五的数据进行训练，周六到周日的没有使用的数据做测试集。

2.在线评价收益，
两步：
1.定义指标，
在信息流场景下，最关心的是点击率和平均阅读时长，
在电商场景下，最关心转化率，和总的交易额，
总之，根据产品来找到最能够评价产品的核心指标，
2.生产环境ab测试
然后要放到生产环境中进行ab测试，可以采用划分userid尾号的形式(比如分出1%的流量在原有的召回算法体系上增加要测试的召回算法)，
测试几天之后，与极限比较核心指标的优劣，如果收益是正向的就保留。













